name: Build and Release x86_64 Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Download the base image tar.xz package
      - name: Download base image tar.xz
        run: wget --no-check-certificate -O base_image.tar.xz https://repo.openeuler.org/openEuler-22.03-LTS-SP3/docker_img/x86_64/openEuler-docker.x86_64.tar.xz

      # Step 3: Decompress the base image tar.xz
      - name: Decompress base image tar.xz
        run: |
          apt-get update && apt-get install -y xz-utils
          xz -d base_image.tar.xz

      # Step 4: Load the base image into Docker
      - name: Load base image
        run: docker load -i base_image.tar && rm  base_image.tar

      # Step 5: Build the Docker image
      - name: Build Docker image
        run: cd x86_64 && docker build -t openeuler-dev:origin .

      # Step 6: Install docker-squash
      - name: Install docker-squash
        run: |
          sudo apt-get install -y python3-pip
          pip3 install docker-squash

      # Step 7: Squash the Docker image
      - name: Squash Docker image
        run: |
          docker-squash -t openeuler-dev:latest openeuler-dev:origin
          docker save openeuler-dev:latest -o openeuler-dev-x86_64.tar

      # Step 8: Compress the squashed image into tar.xz
      - name: Compress squashed image
        run: |
          xz -z openeuler-dev-x86_64.tar
          mv openeuler-dev-x86_64.tar.xz openeuler-dev-x86_64_$(date +%Y%m%d).tar.xz
        id: compress

      # Step 9: Create a GitHub Release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.0.0
          release_name: v1.0.0
          draft: false
          prerelease: false

      # Step 10: Upload the compressed image to the release
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: openeuler-dev-x86_64_$(date +%Y%m%d).tar.xz
          asset_name: openeuler-dev-x86_64_$(date +%Y%m%d).tar.xz
          asset_content_type: application/x-xz
